{"version":3,"sources":["components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/Form.module.css","components/ContactForm/Form.js","components/ContactsList/ContsctsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Form","state","contacts","name","number","nameInputId","shortid","generate","handleChange","currentTarget","value","setState","handleSubmit","e","preventDefault","onAdd","props","validateForm","id","reset","onCheckUnique","alert","this","className","s","form","onSubmit","htmlFor","placeholder","input","type","onChange","pattern","title","required","button","Component","ContactListItem","onRemove","item","onClick","ContactsList","length","list","map","contact","Filter","filter","target","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","includes","localStorage","getItem","parsContacts","JSON","parse","prevValue","prevState","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbe24427.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__XF3F1\",\"item\":\"ContactList_item__1ZhzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3L_1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1maRN\",\"input\":\"Form_input__19skw\",\"button\":\"Form_button__3hFvz\"};","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n\n  handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidForm = this.validateForm();\n    if (!isValidForm) return;\n    onAdd({ id: shortid.generate(), name, number });\n    this.reset();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { onCheckUnique } = this.props;\n    if (!name || !number) {\n      alert(\"Field is empty\");\n      return false;\n    }\n    return onCheckUnique(name);\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          placeholder=\"Your name is...\"\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n          id={this.nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label htmlFor={this.nameInputId}>Phone</label>\n        <input\n          placeholder=\"+...\"\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleChange}\n          id={this.nameInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import s from \"./ContactList.module.css\";\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={s.item}>\n      {name}:{number} <button onClick={() => onRemove(id)}> Remove </button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <ContactListItem {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className={s.input}>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={({ target }) => onChange(target.value)}\n        placeholder=\"Search...\"\n      />\n    </div>\n  );\n};\nexport default Filter;\n","import React, { Component } from \"react\";\nimport Form from \"./components/ContactForm/Form\";\nimport ContactsList from \"./components/ContactsList/ContsctsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n  };\n\n  handleAddContact = (newContact) =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueContact = (name) => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n\n    isExistContact && alert(\"Contact is already exist\");\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  handleFilterChange = (filter) => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.includes(filter));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsContacts = JSON.parse(contacts);\n      if (parsContacts) {\n      this.setState({contacts:parsContacts})\n      }\n  }\n\n  componentDidUpdate(prevValue, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h2>Form Contact</h2>\n        <Form\n          className={\"forms\"}\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts list</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}